// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String @id @default(uuid())
  username  String @unique
  firstname String
  lastname  String
  email     String @unique
  password  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  chats    Chats[]
  messages Messages[]
}

model Chats {
  id String @id @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users    Users[]
  messages Messages[]
}

model Messages {
  id      String @id @default(uuid())
  content String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  chat   Chats  @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId String

  sender   Users  @relation(fields: [senderId], references: [id], onDelete: Cascade)
  senderId String

  file Files?
}

model Files {
  id   String @id @default(uuid())
  name String
  size Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  message   Messages @relation(fields: [messageId], references: [id])
  messageId String   @unique
}
